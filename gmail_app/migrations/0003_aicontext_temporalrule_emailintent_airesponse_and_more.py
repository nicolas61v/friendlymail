# Generated by Django 4.2.15 on 2025-09-08 21:58

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gmail_app', '0002_alter_gmailaccount_refresh_token'),
    ]

    operations = [
        migrations.CreateModel(
            name='AIContext',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(help_text="e.g., 'Professor at EAFIT', 'Tech Support Manager'", max_length=100)),
                ('context_description', models.TextField(help_text='Describe your role and what you do')),
                ('complexity_level', models.CharField(choices=[('simple', 'Simple - Basic context only'), ('medium', 'Medium - Context + filters + keywords'), ('advanced', 'Advanced - Full customization')], default='simple', max_length=20)),
                ('can_respond_topics', models.TextField(blank=True, help_text='Topics/questions AI can answer (one per line)')),
                ('cannot_respond_topics', models.TextField(blank=True, help_text='Topics AI should escalate to you (one per line)')),
                ('allowed_domains', models.TextField(blank=True, help_text='Email domains to process (e.g., @eafit.edu.co, @company.com)')),
                ('is_active', models.BooleanField(default=True)),
                ('auto_send', models.BooleanField(default=False, help_text='Auto-send responses or require approval')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TemporalRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Midterm Exam Info'", max_length=200)),
                ('description', models.TextField(blank=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('keywords', models.TextField(help_text='Keywords that trigger this rule (comma-separated)')),
                ('email_filters', models.TextField(blank=True, help_text='Additional email filters (optional)')),
                ('response_template', models.TextField(help_text='Template response for matching emails')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('scheduled', 'Scheduled'), ('expired', 'Expired'), ('disabled', 'Disabled')], default='draft', max_length=20)),
                ('priority', models.IntegerField(default=1, help_text='Higher number = higher priority')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ai_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='temporal_rules', to='gmail_app.aicontext')),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intent_type', models.CharField(choices=[('academic_question', 'Academic Question'), ('schedule_inquiry', 'Schedule Inquiry'), ('exam_info', 'Exam Information'), ('assignment_info', 'Assignment Information'), ('technical_support', 'Technical Support'), ('personal_matter', 'Personal Matter'), ('administrative', 'Administrative'), ('emergency', 'Emergency'), ('spam', 'Spam'), ('unclear', 'Unclear Intent')], max_length=50)),
                ('confidence_score', models.FloatField(help_text='AI confidence (0.0 - 1.0)')),
                ('ai_decision', models.CharField(choices=[('respond', 'AI Should Respond'), ('escalate', 'Escalate to Human'), ('ignore', 'Ignore (Spam)')], max_length=20)),
                ('decision_reason', models.TextField(help_text='Why AI made this decision')),
                ('processed_at', models.DateTimeField(auto_now_add=True)),
                ('processing_time_ms', models.IntegerField(help_text='Time taken for AI analysis')),
                ('email', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gmail_app.email')),
                ('matched_rule', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gmail_app.temporalrule')),
            ],
        ),
        migrations.CreateModel(
            name='AIResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_text', models.TextField()),
                ('response_subject', models.CharField(help_text='Subject line for response', max_length=200)),
                ('status', models.CharField(choices=[('generated', 'Generated by AI'), ('pending_approval', 'Pending User Approval'), ('approved', 'Approved by User'), ('rejected', 'Rejected by User'), ('sent', 'Sent to Recipient'), ('failed', 'Failed to Send')], default='generated', max_length=20)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('user_feedback', models.TextField(blank=True, help_text='User feedback on AI response quality')),
                ('email_intent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='gmail_app.emailintent')),
            ],
        ),
        migrations.CreateModel(
            name='AIStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('emails_processed', models.IntegerField(default=0)),
                ('responses_generated', models.IntegerField(default=0)),
                ('responses_sent', models.IntegerField(default=0)),
                ('escalations', models.IntegerField(default=0)),
                ('avg_confidence', models.FloatField(default=0.0)),
                ('avg_processing_time_ms', models.IntegerField(default=0)),
                ('user_approvals', models.IntegerField(default=0)),
                ('user_rejections', models.IntegerField(default=0)),
                ('ai_context', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='gmail_app.aicontext')),
            ],
            options={
                'unique_together': {('ai_context', 'date')},
            },
        ),
    ]
